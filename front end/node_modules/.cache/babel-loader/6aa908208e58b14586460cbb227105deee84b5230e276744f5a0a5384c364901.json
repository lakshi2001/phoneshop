{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\wwwka\\\\OneDrive\\\\Desktop\\\\the_phone_shop\\\\frontend\\\\src\\\\components\\\\customer\\\\paypal.tsx\",\n  _s = $RefreshSig$();\nimport { PayPalScriptProvider, PayPalButtons } from '@paypal/react-paypal-js';\nimport { useState } from 'react';\nimport axios from 'axios';\nimport Cookies from 'js-cookie';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PayPalPayment = () => {\n  _s();\n  const initialUsername = Cookies.get('user_name');\n  const [username, setUsername] = useState(initialUsername);\n  const initialOptions = {\n    'client-id': 'AdB4sXWK35VVUgRmBjY9Mz1XlrDQdcRKm_JDBkZh7qWWyBZEilzzzOw7Ekkq9Zp7KRra1JiSCXZo2edZ',\n    currency: 'USD'\n  };\n  const [completed, setCompleted] = useState(false);\n  const createOrder = (data, actions) => {\n    return actions.order.create({\n      purchase_units: [{\n        amount: {\n          value: '10.00'\n        }\n      }]\n    });\n  };\n  const onApprove = (data, actions) => {\n    return actions.order.capture().then(function (details) {\n      setCompleted(true);\n      // Handle successful payment, e.g., display a success message\n      console.log('Transaction completed by ' + details.payer.name.given_name);\n      if (username) {\n        update_order_status(username);\n      } else {\n        console.error('Username is undefined');\n      }\n    });\n  };\n  function update_order_status(username) {\n    axios.put(`http://localhost:5000/orders/change_status/${username}`).then(response => {\n      console.log('Order status updated successfully');\n      window.location.href = \"/customer/dashboard\";\n    }).catch(error => {\n      console.error('Error updating order status:', error);\n      // Handle errors, if needed\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(PayPalScriptProvider, {\n    options: initialOptions,\n    children: !completed ? /*#__PURE__*/_jsxDEV(PayPalButtons, {\n      createOrder: createOrder,\n      onApprove: onApprove\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Payment Completed!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(PayPalPayment, \"mX3mwMwf1ZSb9qQD97lqkwr8ioE=\");\n_c = PayPalPayment;\nexport default PayPalPayment;\nvar _c;\n$RefreshReg$(_c, \"PayPalPayment\");","map":{"version":3,"names":["PayPalScriptProvider","PayPalButtons","useState","axios","Cookies","jsxDEV","_jsxDEV","PayPalPayment","_s","initialUsername","get","username","setUsername","initialOptions","currency","completed","setCompleted","createOrder","data","actions","order","create","purchase_units","amount","value","onApprove","capture","then","details","console","log","payer","name","given_name","update_order_status","error","put","response","window","location","href","catch","options","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/wwwka/OneDrive/Desktop/the_phone_shop/frontend/src/components/customer/paypal.tsx"],"sourcesContent":["import { PayPalScriptProvider, PayPalButtons } from '@paypal/react-paypal-js';\r\nimport { useState } from 'react';\r\nimport axios from 'axios';\r\nimport Cookies from 'js-cookie';\r\n\r\nconst PayPalPayment: React.FC = () => {\r\n\r\n  const initialUsername: string | undefined = Cookies.get('user_name');\r\n  const [username, setUsername] = useState<string | undefined>(initialUsername);\r\n\r\n  const initialOptions: any = {\r\n    'client-id': 'AdB4sXWK35VVUgRmBjY9Mz1XlrDQdcRKm_JDBkZh7qWWyBZEilzzzOw7Ekkq9Zp7KRra1JiSCXZo2edZ', \r\n    currency: 'USD',\r\n  };\r\n\r\n  const [completed, setCompleted] = useState<boolean>(false);\r\n\r\n  const createOrder = (data: any, actions: any) => {\r\n    return actions.order.create({\r\n      purchase_units: [\r\n        {\r\n          amount: {\r\n            value: '10.00', \r\n          },\r\n        },\r\n      ],\r\n    });\r\n  };\r\n\r\n  const onApprove = (data: any, actions: any) => {\r\n    return actions.order.capture().then(function (details: any) {\r\n      setCompleted(true);\r\n      // Handle successful payment, e.g., display a success message\r\n      console.log('Transaction completed by ' + details.payer.name.given_name);\r\n\r\n      if (username) {\r\n        update_order_status(username);\r\n      } else {\r\n        console.error('Username is undefined');\r\n      }\r\n    });\r\n  };\r\n\r\n  function update_order_status(username: string): void {\r\n   \r\n    axios.put(`http://localhost:5000/orders/change_status/${username}`)\r\n      .then((response) => {\r\n        console.log('Order status updated successfully');\r\n        window.location.href=\"/customer/dashboard\";\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error updating order status:', error);\r\n        // Handle errors, if needed\r\n      });\r\n  }\r\n\r\n  return (\r\n    <PayPalScriptProvider options={initialOptions}>\r\n      {!completed ? (\r\n        <PayPalButtons createOrder={createOrder} onApprove={onApprove} />\r\n      ) : (\r\n        <div>\r\n          <h2>Payment Completed!</h2>\r\n        </div>\r\n      )}\r\n    </PayPalScriptProvider>\r\n  );\r\n};\r\n\r\nexport default PayPalPayment;\r\n"],"mappings":";;AAAA,SAASA,oBAAoB,EAAEC,aAAa,QAAQ,yBAAyB;AAC7E,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,aAAuB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEpC,MAAMC,eAAmC,GAAGL,OAAO,CAACM,GAAG,CAAC,WAAW,CAAC;EACpE,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAqBO,eAAe,CAAC;EAE7E,MAAMI,cAAmB,GAAG;IAC1B,WAAW,EAAE,kFAAkF;IAC/FC,QAAQ,EAAE;EACZ,CAAC;EAED,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAU,KAAK,CAAC;EAE1D,MAAMe,WAAW,GAAGA,CAACC,IAAS,EAAEC,OAAY,KAAK;IAC/C,OAAOA,OAAO,CAACC,KAAK,CAACC,MAAM,CAAC;MAC1BC,cAAc,EAAE,CACd;QACEC,MAAM,EAAE;UACNC,KAAK,EAAE;QACT;MACF,CAAC;IAEL,CAAC,CAAC;EACJ,CAAC;EAED,MAAMC,SAAS,GAAGA,CAACP,IAAS,EAAEC,OAAY,KAAK;IAC7C,OAAOA,OAAO,CAACC,KAAK,CAACM,OAAO,CAAC,CAAC,CAACC,IAAI,CAAC,UAAUC,OAAY,EAAE;MAC1DZ,YAAY,CAAC,IAAI,CAAC;MAClB;MACAa,OAAO,CAACC,GAAG,CAAC,2BAA2B,GAAGF,OAAO,CAACG,KAAK,CAACC,IAAI,CAACC,UAAU,CAAC;MAExE,IAAItB,QAAQ,EAAE;QACZuB,mBAAmB,CAACvB,QAAQ,CAAC;MAC/B,CAAC,MAAM;QACLkB,OAAO,CAACM,KAAK,CAAC,uBAAuB,CAAC;MACxC;IACF,CAAC,CAAC;EACJ,CAAC;EAED,SAASD,mBAAmBA,CAACvB,QAAgB,EAAQ;IAEnDR,KAAK,CAACiC,GAAG,CAAE,8CAA6CzB,QAAS,EAAC,CAAC,CAChEgB,IAAI,CAAEU,QAAQ,IAAK;MAClBR,OAAO,CAACC,GAAG,CAAC,mCAAmC,CAAC;MAChDQ,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAC,qBAAqB;IAC5C,CAAC,CAAC,CACDC,KAAK,CAAEN,KAAK,IAAK;MAChBN,OAAO,CAACM,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACpD;IACF,CAAC,CAAC;EACN;EAEA,oBACE7B,OAAA,CAACN,oBAAoB;IAAC0C,OAAO,EAAE7B,cAAe;IAAA8B,QAAA,EAC3C,CAAC5B,SAAS,gBACTT,OAAA,CAACL,aAAa;MAACgB,WAAW,EAAEA,WAAY;MAACQ,SAAS,EAAEA;IAAU;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAEjEzC,OAAA;MAAAqC,QAAA,eACErC,OAAA;QAAAqC,QAAA,EAAI;MAAkB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB;EACN;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACmB,CAAC;AAE3B,CAAC;AAACvC,EAAA,CA9DID,aAAuB;AAAAyC,EAAA,GAAvBzC,aAAuB;AAgE7B,eAAeA,aAAa;AAAC,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}